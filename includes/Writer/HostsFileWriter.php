<?php

require_once('includes/Writer/FileWriterInterface.php');
require_once('includes/Settings/GlobalSettings.php');
require_once('includes/Database/DbHelper.php');

class HostsFileWriter implements FileWriterInterface {

  public function write() {
    $host_file_entries = $this->getHostFileEntries();
    $this->writeHostsFile($host_file_entries);
  }

  private function getHostFileEntries() {
    $db = DbHelper::getDatabase();

    $result = $db->query('SELECT * FROM hosts');

    $host_file_entries = array();
    if ($result->num_rows > 0) {
      while ($hosts_entry = $result->fetch_assoc()) {
        $host_file_entries[] = $hosts_entry;
      }
    }

    return $host_file_entries;
  }

  private function writeHostsFile($host_file_entries) {
    $settings = GlobalSettings::getInstance();

    $file = fopen($settings->get('path_to_hosts_file'), 'w');

    if (!$file) {
      throw new Exception('Unable to write to the hosts file.');
    }

    fwrite($file, "# This file was generated by the Host Manager tool." . PHP_EOL);
    fwrite($file, "# This file is replaced every so often so to persist any changes, please ensure you add it with the Host Manager tool." . PHP_EOL);
    fwrite($file, "127.0.0.1       localhost" . PHP_EOL);
    fwrite($file, "255.255.255.255 broadcasthost" . PHP_EOL);
    fwrite($file, "::1             localhost" . PHP_EOL);

    foreach ($host_file_entries as $record)
    {
      $comment = ($record['status'] == 1) ? "" : "#";
      $ip = str_pad($record['ip'], 15);
      $domain = $record['hostname'];

      $entry = sprintf("%s%s %s", $comment, $ip, $domain);

      fwrite($file, $entry . PHP_EOL);
    }

    fclose($file);
  }
}
